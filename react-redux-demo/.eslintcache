[{"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\index.js":"1","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\App.js":"2","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\store.js":"3","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\history.js":"4","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\Header.js":"5","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\Footer.js":"6","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\pages\\Todo.js":"7","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\DrawerMenu.js":"8","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\pages\\Setting.js":"9","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\todosSlice.js":"10","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\filtersSlice.js":"11","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\TodoListItem.js":"12","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\api\\client.js":"13","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\firebase\\index.js":"14","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\firebase\\config.js":"15"},{"size":1287,"mtime":1610905420942,"results":"16","hashOfConfig":"17"},{"size":738,"mtime":1610019569333,"results":"18","hashOfConfig":"17"},{"size":1133,"mtime":1610103037034,"results":"19","hashOfConfig":"17"},{"size":173,"mtime":1609516866648,"results":"20","hashOfConfig":"17"},{"size":1598,"mtime":1610717751962,"results":"21","hashOfConfig":"17"},{"size":317,"mtime":1607921176012,"results":"22","hashOfConfig":"17"},{"size":7551,"mtime":1611410451514,"results":"23","hashOfConfig":"17"},{"size":1732,"mtime":1610717892771,"results":"24","hashOfConfig":"17"},{"size":1072,"mtime":1610718254335,"results":"25","hashOfConfig":"17"},{"size":9210,"mtime":1611235377171,"results":"26","hashOfConfig":"17"},{"size":1037,"mtime":1609336135979,"results":"27","hashOfConfig":"17"},{"size":3038,"mtime":1611234883345,"results":"28","hashOfConfig":"17"},{"size":1511,"mtime":1611233719643,"results":"29","hashOfConfig":"17"},{"size":1077,"mtime":1611148500157,"results":"30","hashOfConfig":"17"},{"size":504,"mtime":1610900533896,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"19v0ep8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\index.js",[],["69","70"],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\App.js",["71","72","73","74","75"],"import './App.css';\nimport { Route, Router, Switch } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Todo from './pages/Todo';\nimport Setting from './pages/Setting';\n\nfunction App() {\n  console.log(process.env.NODE_ENV);\n  return (\n    <div className=\"App\">\n      {/* <Router> ←ConnectedRouterがあるからいらない？*/}\n        <Switch>\n          <Route exact path=\"/\" component={Todo} />\n          <Route exact path=\"/a\" component={Setting} />\n          {/* <Route component={NotFound}/> */}\n        </Switch>\n      {/* </Router> */}\n    </div>\n\n  );\n}\n\nexport default App;\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\store.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\history.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\Header.js",["76","77","78"],"\r\nimport { AppBar, Button, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DrawerMenu from \"./DrawerMenu\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: \"5px\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  }\r\n});\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    drawerOpen: false,\r\n  });\r\n\r\n  // ドロワーメニューの開閉\r\n  const toggleDrawer = (open) => (e) => {\r\n    if(e.type == 'keydown' && ( e.key === 'Tab' || e.key === 'Shift')) return;\r\n    setState({ ...state, drawerOpen: open})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\">\r\n            {/* MenuIconをクリックすると必ずstate.drawerOpenをtrueにする。つまりドロワーを開く */}\r\n            <MenuIcon onClick={toggleDrawer(true)}/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Todo List!\r\n        </Typography>\r\n          <Button color=\"inherit\">ぼたん</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DrawerMenu open={state.drawerOpen} toggleDrawer={toggleDrawer}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\Footer.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\pages\\Todo.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\DrawerMenu.js",["97","98","99","100","101","102"],"\r\nimport { AppBar, Button, Divider, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  }\r\n});\r\n\r\nconst DrawerMenu = (props) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer anchor=\"left\" open={props.open} onClose={props.toggleDrawer(false)}>\r\n      {/* onColseにドロワー閉じる関数を設定しとかないとどこかクリックしたときにドロワーが閉じないよ！ */}\r\n      <div className={classes.list}>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon><InfoIcon /></ListItemIcon>\r\n            <ListItemText primary=\"このサイトについて\"></ListItemText>\r\n          </ListItem>\r\n          <Divider/>\r\n          {/* dispatch(push('./')) でページ遷移するよ */}\r\n          <ListItem button onClick={() => {dispatch(push('./'))}}>\r\n            <ListItemIcon><HomeIcon /></ListItemIcon>\r\n            <ListItemText primary=\"ホーム\"></ListItemText>\r\n          </ListItem>\r\n          <ListItem button onClick={() => {dispatch(push('./a'))}}>\r\n            <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n            <ListItemText primary=\"設定\"></ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default DrawerMenu;\r\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\pages\\Setting.js",["103","104","105","106","107","108","109","110","111","112","113"],"\r\nimport { AppBar, Button, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport MenuIcon  from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Header from '../components/Header';\r\nimport DrawerMenu from \"../components/DrawerMenu\";\r\n\r\nimport styles from '../assets/css/setting/Setting.module.css';\r\n\r\nimport image from '../assets/img/setting/hair_barcode.png';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n});\r\n\r\n\r\nconst Setting = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Header/>\r\n      {/* 画像をインポートするとbuild後に使用されるパス文字列が返される。srcにそのパスを適用すればOK */}\r\n      <img src={image} alt=\"barcode image\"/>\r\n\r\n      {/* cssモジュールは変数にインポートして 変数.クラス名 とすれば適用できる */}\r\n      <div className={styles.box}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Setting;\r\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\todosSlice.js",["114","115","116","117"],"import { createSelector } from \"reselect\";\nimport { client } from \"../api/client\";\nimport { db, FirebaseTimestamp } from '../firebase';\n\n// -------- 初期状態 --------\n// stateの初期状態を定義している\nconst initialState = {\n  entities: []\n  // entities:\n  //   // [todo.id]: {\n  //   [\n  //     {\n  //       id: 1,\n  //       text: \"test1\",\n  //       completed: false,\n  //       color: \"none\",\n  //     },\n  //     {\n  //       id: 2,\n  //       text: \"test2\",\n  //       completed: false,\n  //       color: \"green\",\n  //     },\n  //     {\n  //       id: 3,\n  //       text: \"test3\",\n  //       completed: true,\n  //       color: \"none\",\n  //     },\n  //   ]\n  // fetching: false,\n  // fetched: false\n}\n\n// -------- id更新関数 --------\n// sliceに必須なものではないよ！\n// api使わないで自分のstoreを更新するだけのときに使ってた\n// 多分大抵のapiはIDは更新して返してくると思う\nfunction nextTodoId(todos) {\n  const maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1);\n  return maxId + 1;\n}\n\n\n// -------- レデューサー --------\n// actionがdispatchされるとここの処理が呼ばれる\n// action.typeにより処理が分岐し、stateの更新を行う\nexport const TodosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"TODOS/TODO_ADDED\":\n      const todo = action.payload;\n      return {\n        ...state,\n        entities: [\n          ...state.entities,\n          {\n            // id: nextTodoId(state.entities),\n            id: todo.id,\n            text: todo.text,\n            completed: todo.completed,\n            color: todo.color\n          }\n        ]\n      }\n    case \"TOODS/CHANGE_TODO\":\n      // API側のtodoの色や完了フラグが変更された後に変更されたtodoがdispatchされてくる\n      // entitiesをmapして渡されたIDと一致するものを更新する\n      return {\n        ...state,\n        entities: state.entities.map(entity => {\n          if (entity.id !== action.payload.id) return entity;\n          return {\n            ...entity,\n            completed: action.payload.completed,\n            color: action.payload.color,\n          }\n        })\n      }\n    case \"TODOS/FETCH_STATE_CHANGE\":\n      return {\n        ...state,\n        fetchState: {\n          fetching: action.payload.fetching,\n          fetched: action.payload.fetched,\n        }\n      }\n    case \"TODOS/DELETED_TODO\":\n      // API側のtodoが削除された後に削除されたtodoのIDがdispatchされてくる\n      // entitiesをfilterして渡されたIDは取り除く\n      return {\n        ...state,\n        entities: state.entities.filter(entity => {\n          if (entity.id !== action.payload.id) return entity;\n        })\n      }\n    case \"TODOS/CHANGE_COLOR\":\n      return {\n        ...state,\n        entities: state.entities.map(todo => {\n          if (todo.id !== action.payload.id) {\n            return todo;\n          }\n          return {\n            ...todo,\n            color: action.payload.color\n          }\n        })\n      }\n    case \"TODOS/CHANGE_COMPLETE\":\n      return {\n        ...state,\n        entities: state.entities.map(todo => {\n          if (todo.id !== action.payload.id) {\n            return todo;\n          }\n          return {\n            ...todo,\n            completed: action.payload.completed\n          }\n        }),\n      }\n\n\n    case \"FETCH_TODO\":\n      return {\n        ...state,\n        fetching: true\n      }\n    default:\n      return state;\n  }\n}\n\n// -------- セレクタ― --------\n// コンポーネント側でuseSelectorに渡してstoreにアクセスするためのもの\n// 詳しくはメモ参照\nexport const selectTodos = (state) => {\n  return state.todos.entities;\n}\nexport const selectFetch = (state) => {\n  return state.todos.fetchState;\n}\nexport const selectTodoIds = createSelector(\n  selectTodos,\n  todos => todos.map(todo => todo.id)\n)\nexport const selectCompletedTodos = createSelector(\n  selectTodos,\n  todos => todos.filter((todo) => todo.completed).length\n)\n// createSelectorの最後の引数が最終的なセレクター\n// その前のcreateSelectorの引数が最終的なセレクターの引数となる\nexport const selectFilteredTodos = createSelector(\n  selectTodos,\n  state => state.filters.filterComplete,\n  state => state.filters.filterColor,\n  (todos, filterComplete, filterColor) => {\n    return todos.filter((todo) => {\n      const matchColor = todo.color === filterColor || filterColor === \"none\";\n      const matchComplete = todo.completed === filterComplete || filterComplete === \"none\";\n      if (matchColor && matchComplete) return todo\n    })\n  }\n)\nexport const selectTodoById = (state, id) => {\n  return selectTodos(state).find(todo => todo.id === id);\n}\n\n// -------- アクションクリエイター --------\n// コンポーネント側でこれらの関数を実行してactionオブジェクトを取り出す\n// 基本typeプロパティとpayloadプロパティで構成されて\n// reducerに渡されるとtypeプロパティを元に処理分岐する\nexport const todoAdd = (todo) => {\n  // export const todoAdd = (text) => {\n  return {\n    type: \"TODOS/TODO_ADDED\",\n    payload: {\n      id: todo.id,\n      text: todo.text,\n      completed: todo.completed,\n      color: todo.color\n    }\n  }\n}\nexport const changeTodo = (todo) => {\n  return {\n    type: \"TOODS/CHANGE_TODO\",\n    payload: {\n      id: todo.id,\n      text: todo.text,\n      completed: todo.completed,\n      color: todo.color\n    }\n  }\n}\nexport const todoFetch = () => {\n  return {\n    type: \"TODOS/FETCH_STATE_CHANGE\",\n    payload: {\n      fetching: true,\n      fetched: false\n    }\n  }\n}\nexport const todoFetchFin = () => {\n  return {\n    type: \"TODOS/FETCH_STATE_CHANGE\",\n    payload: {\n      fetching: false,\n      fetched: true\n    }\n  }\n}\nexport const deletedTodo = (id) => {\n  return {\n    type: \"TODOS/DELETED_TODO\",\n    payload: {\n      id\n    }\n  }\n}\nexport const changeComplete = (id, complete) => {\n  return {\n    type: \"TODOS/CHANGE_COMPLETE\",\n    payload: {\n      id: id,\n      completed: complete,\n    }\n  }\n}\n\nexport const changeColor = (id, color) => {\n  return {\n    type: \"TODOS/CHANGE_COLOR\",\n    payload: {\n      id: id,\n      color: color\n    }\n  }\n}\n\n// -------- サンク関数 --------\n// アクションクリエイターみたいにコンポーネント側で実行する\n// 実行するとasyncなfunctionを返す。これがそのままdispatch()に渡される\n\n// 新規に登録するtodo\n// コンポーネント側よりtextをもらって、APIにpostする\n// responseは従来のtodoAddアクションクリエイターによって処理してもらう\nexport const saveNewTodo = (text) => async (dispatch) => {\n  const timestamp = FirebaseTimestamp.now();\n  const initTodo = {\n    text,\n    completed: false,\n    color: \"none\",\n    timestamp\n  };  //textについては→のように展開される {text:'textの値'}\n\n  // ローカルのjson serverで開発するときに活かしてたやつ\n  // const response = await client.post('http://localhost:3030/todos', initTodo);\n  // dispatch(todoAdd(response));\n\n  const todosRef = db.collection('todos');\n  const id = todosRef.doc().id;\n  initTodo.id = id;\n  await todosRef.doc(id).set(initTodo).catch(e => { throw new Error(e) });\n  dispatch(todoAdd(initTodo));\n\n  // asyncじゃない書き方\n  // todosRef.doc(id).set(initTodo)\n  //   .then(() => {\n  //     dispatch(todoAdd(initTodo));\n  //   }).catch((error) => {\n  //     throw new Error(error);\n  //   });\n\n\n}\n\n// 公式のやつはこんな感じなのか？確認\n// 公式では纏めてdispatchしてreducer側で展開するような感じになっている\nexport const fetchTodos = () => async (dispatch) => {\n  dispatch(todoFetch());\n\n  // json serverで使うやつ\n  // const response = await client.get('http://localhost:3030/todos');\n  // dispatch(todoFetchFin());\n  // for(const r of response){\n  //   dispatch(todoAdd(r));\n  // }\n\n  // orderByで引数１のプロパティについて、引数２がascなら昇順、descなら降順でｿｰﾄする\n  db.collection('todos').orderBy('timestamp', 'asc').get()\n    .then(snapshots => {\n      dispatch(todoFetchFin());\n      const todosList = [];\n      snapshots.forEach(snapshot => {\n        const todo = snapshot.data();\n        todosList.push(todo);\n        dispatch(todoAdd(todo));\n      });\n    })\n\n}\n\nexport const updateTodo = (id, todo) => async (dispatch) => {\n  const sendTodo = todo;\n  // json-serverのやつ\n  // const response = await client.put('http://localhost:3030/todos/' + id, sendTodo);\n\n  // set()メソッドでも第1引数にデータ、第二引数に{marge: true}ってすればいいみたいだけど・・・？\n  // updateとだと特定のﾌｨｰﾙﾄﾞのみ更新するようにして使える\n  db.collection('todos').doc(id).update(sendTodo)\n    .then(() => {\n      dispatch(changeTodo(sendTodo));\n    });\n}\n\nexport const deleteTodo = (id) => async (dispatch) => {\n  // const response = await client.delete('http://localhost:3030/todos/' + id);\n\n  db.collection('todos').doc(id).delete()\n    .then(() => {\n      dispatch(deletedTodo(id));\n    });\n}\n\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\filtersSlice.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\TodoListItem.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"\r\nimport { AppBar, Button, Checkbox, Container, IconButton, InputLabel, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, MenuItem, Select, TextField, Toolbar, Typography } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeComplete, changeColor, updateTodo, updateComplete, updateColor, selectTodoById, changeTodos, deleteTodo } from \"../state/todosSlice\";\r\n\r\n\r\n// todo項目一個のコンポーネント\r\nconst TodoListItem = (props) => {\r\n  // このセレクターはpropsとして渡されたIDを元にtodoを取り出す\r\n  const todo = useSelector(state => selectTodoById(state, props.id));\r\n  const dispatch = useDispatch();\r\n\r\n  // 完了フラグチェックボックスを変更したときのハンドラ\r\n  // const handleChangeCompleted = (e) => {\r\n  //   const newTodo = {...todo,completed: e.target.checked};\r\n  //   dispatch(updateTodo(props.id, newTodo));\r\n  // }\r\n  // ↑をusecallback化したもの\r\n  // 一つ目の引数に普通にコンポーネントに渡す感じの関数を書いて、\r\n  // 二つ目の引数にはその依存する変数の配列を渡す。\r\n  // 二つ目の配列の中身が変化しなければ関数の再計算はせずにキャッシュした関数の戻り値のみを使用する\r\n  const handleChangeCompleted = useCallback(\r\n    (e) => {\r\n      const newTodo = { ...todo, completed: e.target.checked };\r\n      dispatch(updateTodo(props.id, newTodo));\r\n    },\r\n    [todo]\r\n  )\r\n  // todo色の変更ハンドラ\r\n  const handleChangeColor = (e) => {\r\n    const newTodo = { ...todo, color: e.target.value };\r\n    dispatch(updateTodo(props.id, newTodo));\r\n  }\r\n  // todo削除ボタン押し下げ時のハンドラ\r\n  const handleDelete = () => {\r\n    dispatch(deleteTodo(props.id));\r\n  }\r\n\r\n  return (\r\n    <ListItem>\r\n      <ListItemIcon>\r\n        <Checkbox\r\n          edge=\"start\"\r\n          checked={todo.completed}\r\n          disableRipple\r\n          onChange={handleChangeCompleted}\r\n        />\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={todo.text}\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <Select\r\n          edge=\"end\"\r\n          value={todo.color}\r\n          onChange={handleChangeColor}\r\n        >\r\n          <MenuItem value={\"green\"}>green</MenuItem>\r\n          <MenuItem value={\"red\"}>red</MenuItem>\r\n          <MenuItem value={\"blue\"}>blue</MenuItem>\r\n\r\n        </Select>\r\n        <IconButton\r\n          aria-label=\"delete\"\r\n          onClick={handleDelete}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default TodoListItem;\r\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\api\\client.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\firebase\\index.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\firebase\\config.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":2,"column":17,"nodeType":"144","messageId":"145","endLine":2,"endColumn":23},{"ruleId":"142","severity":1,"message":"146","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":21},{"ruleId":"142","severity":1,"message":"147","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":14},{"ruleId":"142","severity":1,"message":"148","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"149","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":14},{"ruleId":"142","severity":1,"message":"147","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"150","line":23,"column":9,"nodeType":"144","messageId":"145","endLine":23,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":32,"column":15,"nodeType":"153","messageId":"154","endLine":32,"endColumn":17},{"ruleId":"142","severity":1,"message":"155","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":16},{"ruleId":"142","severity":1,"message":"156","line":2,"column":26,"nodeType":"144","messageId":"145","endLine":2,"endColumn":34},{"ruleId":"142","severity":1,"message":"157","line":2,"column":77,"nodeType":"144","messageId":"145","endLine":2,"endColumn":85},{"ruleId":"142","severity":1,"message":"158","line":2,"column":87,"nodeType":"144","messageId":"145","endLine":2,"endColumn":99},{"ruleId":"142","severity":1,"message":"159","line":2,"column":101,"nodeType":"144","messageId":"145","endLine":2,"endColumn":124},{"ruleId":"142","severity":1,"message":"160","line":2,"column":126,"nodeType":"144","messageId":"145","endLine":2,"endColumn":138},{"ruleId":"142","severity":1,"message":"161","line":2,"column":169,"nodeType":"144","messageId":"145","endLine":2,"endColumn":176},{"ruleId":"142","severity":1,"message":"162","line":2,"column":178,"nodeType":"144","messageId":"145","endLine":2,"endColumn":188},{"ruleId":"142","severity":1,"message":"163","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"147","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":14},{"ruleId":"142","severity":1,"message":"164","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":18},{"ruleId":"142","severity":1,"message":"165","line":12,"column":10,"nodeType":"144","messageId":"145","endLine":12,"endColumn":31},{"ruleId":"142","severity":1,"message":"166","line":12,"column":33,"nodeType":"144","messageId":"145","endLine":12,"endColumn":46},{"ruleId":"142","severity":1,"message":"167","line":15,"column":10,"nodeType":"144","messageId":"145","endLine":15,"endColumn":17},{"ruleId":"142","severity":1,"message":"168","line":15,"column":19,"nodeType":"144","messageId":"145","endLine":15,"endColumn":33},{"ruleId":"142","severity":1,"message":"169","line":52,"column":9,"nodeType":"144","messageId":"145","endLine":52,"endColumn":14},{"ruleId":"142","severity":1,"message":"170","line":53,"column":9,"nodeType":"144","messageId":"145","endLine":53,"endColumn":16},{"ruleId":"142","severity":1,"message":"171","line":118,"column":15,"nodeType":"144","messageId":"145","endLine":118,"endColumn":23},{"ruleId":"142","severity":1,"message":"155","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":16},{"ruleId":"142","severity":1,"message":"172","line":2,"column":18,"nodeType":"144","messageId":"145","endLine":2,"endColumn":24},{"ruleId":"142","severity":1,"message":"173","line":2,"column":43,"nodeType":"144","messageId":"145","endLine":2,"endColumn":53},{"ruleId":"142","severity":1,"message":"161","line":2,"column":99,"nodeType":"144","messageId":"145","endLine":2,"endColumn":106},{"ruleId":"142","severity":1,"message":"162","line":2,"column":108,"nodeType":"144","messageId":"145","endLine":2,"endColumn":118},{"ruleId":"142","severity":1,"message":"174","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":18},{"ruleId":"142","severity":1,"message":"155","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":16},{"ruleId":"142","severity":1,"message":"172","line":2,"column":18,"nodeType":"144","messageId":"145","endLine":2,"endColumn":24},{"ruleId":"142","severity":1,"message":"173","line":2,"column":26,"nodeType":"144","messageId":"145","endLine":2,"endColumn":36},{"ruleId":"142","severity":1,"message":"161","line":2,"column":38,"nodeType":"144","messageId":"145","endLine":2,"endColumn":45},{"ruleId":"142","severity":1,"message":"162","line":2,"column":47,"nodeType":"144","messageId":"145","endLine":2,"endColumn":57},{"ruleId":"142","severity":1,"message":"163","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"147","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"164","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":18},{"ruleId":"142","severity":1,"message":"150","line":21,"column":9,"nodeType":"144","messageId":"145","endLine":21,"endColumn":17},{"ruleId":"142","severity":1,"message":"175","line":22,"column":9,"nodeType":"144","messageId":"145","endLine":22,"endColumn":16},{"ruleId":"176","severity":1,"message":"177","line":27,"column":7,"nodeType":"178","endLine":27,"endColumn":45},{"ruleId":"142","severity":1,"message":"179","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":16},{"ruleId":"142","severity":1,"message":"180","line":39,"column":10,"nodeType":"144","messageId":"145","endLine":39,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":92,"column":48,"nodeType":"183","messageId":"184","endLine":92,"endColumn":50},{"ruleId":"181","severity":1,"message":"182","line":158,"column":32,"nodeType":"183","messageId":"184","endLine":158,"endColumn":34},{"ruleId":"142","severity":1,"message":"155","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":16},{"ruleId":"142","severity":1,"message":"172","line":2,"column":18,"nodeType":"144","messageId":"145","endLine":2,"endColumn":24},{"ruleId":"142","severity":1,"message":"185","line":2,"column":36,"nodeType":"144","messageId":"145","endLine":2,"endColumn":45},{"ruleId":"142","severity":1,"message":"186","line":2,"column":59,"nodeType":"144","messageId":"145","endLine":2,"endColumn":69},{"ruleId":"142","severity":1,"message":"187","line":2,"column":71,"nodeType":"144","messageId":"145","endLine":2,"endColumn":75},{"ruleId":"142","severity":1,"message":"188","line":2,"column":158,"nodeType":"144","messageId":"145","endLine":2,"endColumn":167},{"ruleId":"142","severity":1,"message":"161","line":2,"column":169,"nodeType":"144","messageId":"145","endLine":2,"endColumn":176},{"ruleId":"142","severity":1,"message":"162","line":2,"column":178,"nodeType":"144","messageId":"145","endLine":2,"endColumn":188},{"ruleId":"142","severity":1,"message":"189","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"190","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":20},{"ruleId":"142","severity":1,"message":"191","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":16},{"ruleId":"142","severity":1,"message":"192","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":20},{"ruleId":"142","severity":1,"message":"147","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":14},{"ruleId":"142","severity":1,"message":"174","line":9,"column":23,"nodeType":"144","messageId":"145","endLine":9,"endColumn":31},{"ruleId":"142","severity":1,"message":"168","line":11,"column":10,"nodeType":"144","messageId":"145","endLine":11,"endColumn":24},{"ruleId":"142","severity":1,"message":"193","line":11,"column":26,"nodeType":"144","messageId":"145","endLine":11,"endColumn":37},{"ruleId":"142","severity":1,"message":"194","line":11,"column":51,"nodeType":"144","messageId":"145","endLine":11,"endColumn":65},{"ruleId":"142","severity":1,"message":"195","line":11,"column":67,"nodeType":"144","messageId":"145","endLine":11,"endColumn":78},{"ruleId":"142","severity":1,"message":"196","line":11,"column":96,"nodeType":"144","messageId":"145","endLine":11,"endColumn":107},{"ruleId":"197","severity":1,"message":"198","line":34,"column":5,"nodeType":"199","endLine":34,"endColumn":11,"suggestions":"200"},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'push' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AppBar' is defined but never used.","'Checkbox' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'DrawerMenu' is defined but never used.","'FullscreenExitTwoTone' is defined but never used.","'TodayOutlined' is defined but never used.","'todoAdd' is defined but never used.","'changeComplete' is defined but never used.","'todos' is assigned a value but never used.","'todoIds' is assigned a value but never used.","'newImage' is assigned a value but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'useState' is defined but never used.","'classes' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'client' is defined but never used.","'nextTodoId' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Container' is defined but never used.","'InputLabel' is defined but never used.","'List' is defined but never used.","'TextField' is defined but never used.","'HomeIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'InfoIcon' is defined but never used.","'makeStyles' is defined but never used.","'changeColor' is defined but never used.","'updateComplete' is defined but never used.","'updateColor' is defined but never used.","'changeTodos' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},"Update the dependencies array to be: [dispatch, props.id, todo]",{"range":"206","text":"207"},[1518,1524],"[dispatch, props.id, todo]"]