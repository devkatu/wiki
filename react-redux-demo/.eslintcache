[{"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\index.js":"1","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\App.js":"2","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\store.js":"3","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\history.js":"4","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\Header.js":"5","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\Footer.js":"6","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\pages\\Todo.js":"7","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\DrawerMenu.js":"8","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\pages\\Setting.js":"9","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\todosSlice.js":"10","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\filtersSlice.js":"11","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\TodoListItem.js":"12","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\api\\client.js":"13"},{"size":1202,"mtime":1609689970601,"results":"14","hashOfConfig":"15"},{"size":738,"mtime":1610019569333,"results":"16","hashOfConfig":"15"},{"size":1133,"mtime":1610103037034,"results":"17","hashOfConfig":"15"},{"size":173,"mtime":1609516866648,"results":"18","hashOfConfig":"15"},{"size":1433,"mtime":1607954676969,"results":"19","hashOfConfig":"15"},{"size":317,"mtime":1607921176012,"results":"20","hashOfConfig":"15"},{"size":5867,"mtime":1610629837670,"results":"21","hashOfConfig":"15"},{"size":1515,"mtime":1607954500286,"results":"22","hashOfConfig":"15"},{"size":832,"mtime":1610630456445,"results":"23","hashOfConfig":"15"},{"size":6904,"mtime":1609939430201,"results":"24","hashOfConfig":"15"},{"size":1037,"mtime":1609336135979,"results":"25","hashOfConfig":"15"},{"size":2158,"mtime":1609852340133,"results":"26","hashOfConfig":"15"},{"size":1321,"mtime":1609852867843,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"19v0ep8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\index.js",[],["60","61"],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\App.js",["62","63","64","65","66"],"import './App.css';\nimport { Route, Router, Switch } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Todo from './pages/Todo';\nimport Setting from './pages/Setting';\n\nfunction App() {\n  console.log(process.env.NODE_ENV);\n  return (\n    <div className=\"App\">\n      {/* <Router> ←ConnectedRouterがあるからいらない？*/}\n        <Switch>\n          <Route exact path=\"/\" component={Todo} />\n          <Route exact path=\"/a\" component={Setting} />\n          {/* <Route component={NotFound}/> */}\n        </Switch>\n      {/* </Router> */}\n    </div>\n\n  );\n}\n\nexport default App;\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\store.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\history.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\Header.js",["67","68","69"],"\r\nimport { AppBar, Button, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DrawerMenu from \"./DrawerMenu\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: \"5px\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  }\r\n});\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    drawerOpen: false,\r\n  });\r\n\r\n  const toggleDrawer = (open) => (e) => {\r\n    if(e.type == 'keydown' && ( e.key === 'Tab' || e.key === 'Shift')) return;\r\n    setState({ ...state, drawerOpen: open})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\">\r\n            <MenuIcon onClick={toggleDrawer(true)}/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Todo List!\r\n        </Typography>\r\n          <Button color=\"inherit\">ぼたん</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DrawerMenu open={state.drawerOpen} toggleDrawer={toggleDrawer}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\Footer.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\pages\\Todo.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\DrawerMenu.js",["88","89","90","91","92","93"],"\r\nimport { AppBar, Button, Divider, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  }\r\n});\r\n\r\nconst DrawerMenu = (props) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer anchor=\"left\" open={props.open} onClose={props.toggleDrawer(false)}>\r\n      <div className={classes.list}>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon><InfoIcon /></ListItemIcon>\r\n            <ListItemText primary=\"このサイトについて\"></ListItemText>\r\n          </ListItem>\r\n          <Divider/>\r\n          <ListItem button onClick={() => {dispatch(push('./'))}}>\r\n            <ListItemIcon><HomeIcon /></ListItemIcon>\r\n            <ListItemText primary=\"ホーム\"></ListItemText>\r\n          </ListItem>\r\n          <ListItem button onClick={() => {dispatch(push('./a'))}}>\r\n            <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n            <ListItemText primary=\"設定\"></ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default DrawerMenu;\r\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\pages\\Setting.js",["94","95","96","97","98","99","100","101","102","103","104"],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\todosSlice.js",["105","106","107","108"],"import { createSelector } from \"reselect\";\nimport { client } from \"../api/client\";\n\n// -------- 初期状態 --------\n// stateの初期状態を定義している\nconst initialState = {\n  entities: []\n  // entities:\n  //   // [todo.id]: {\n  //   [\n  //     {\n  //       id: 1,\n  //       text: \"test1\",\n  //       completed: false,\n  //       color: \"none\",\n  //     },\n  //     {\n  //       id: 2,\n  //       text: \"test2\",\n  //       completed: false,\n  //       color: \"green\",\n  //     },\n  //     {\n  //       id: 3,\n  //       text: \"test3\",\n  //       completed: true,\n  //       color: \"none\",\n  //     },\n  //   ]\n  // fetching: false,\n  // fetched: false\n}\n\n// -------- id更新関数 --------\n// sliceに必須なものではないよ！\nfunction nextTodoId(todos) {\n  const maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1);\n  return maxId + 1;\n}\n\n\n// -------- レデューサー --------\n// actionがdispatchされるとここの処理が呼ばれる\n// action.typeにより処理が分岐し、stateの更新を行う\nexport const TodosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"TODOS/TODO_ADDED\":\n      const todo = action.payload;\n      return {\n        ...state,\n        entities: [\n          ...state.entities,\n          {\n            // id: nextTodoId(state.entities),\n            id: todo.id,\n            text: todo.text,\n            completed: todo.completed,\n            color: todo.color\n          }\n        ]\n      }\n    case \"TOODS/CHANGE_TODO\":\n      return {\n        ...state,\n        entities: state.entities.map(entity => {\n          if(entity.id !== action.payload.id) return entity;\n          return {\n            ...entity,\n            completed: action.payload.completed,\n            color: action.payload.color,\n          }\n        })\n      }\n    case \"TODOS/FETCH_STATE_CHANGE\":\n      return {\n        ...state,\n        fetchState: {\n          fetching: action.payload.fetching,\n          fetched: action.payload.fetched,\n        }\n      }\n    case \"TODOS/DELETED_TODO\":\n      return {\n        ...state,\n        entities: state.entities.filter(entity => {\n          if(entity.id !== action.payload.id) return entity;\n        })\n      }\n    case \"TODOS/CHANGE_COLOR\":\n      return {\n        ...state,\n        entities: state.entities.map(todo => {\n          if (todo.id !== action.payload.id) {\n            return todo;\n          }\n          return {\n            ...todo,\n            color: action.payload.color\n          }\n        })\n      }\n    case \"TODOS/CHANGE_COMPLETE\":\n      return {\n        ...state,\n        entities: state.entities.map(todo => {\n          if (todo.id !== action.payload.id) {\n            return todo;\n          }\n          return {\n            ...todo,\n            completed: action.payload.completed\n          }\n        }),\n      }\n\n\n    case \"FETCH_TODO\":\n      return {\n        ...state,\n        fetching: true\n      }\n    default:\n      return state;\n  }\n}\n\n// -------- セレクタ― --------\n// コンポーネント側でuseSelectorに渡してstoreにアクセスするためのもの\n// 詳しくはメモ参照\nexport const selectTodos = (state) => {\n  return state.todos.entities;\n}\nexport const selectFetch = (state) => {\n  return state.todos.fetchState;\n}\nexport const selectTodoIds = createSelector(\n  selectTodos,\n  todos => todos.map(todo => todo.id)\n)\nexport const selectCompletedTodos = createSelector(\n  selectTodos,\n  todos => todos.filter((todo) => todo.completed).length\n)\nexport const selectFilteredTodos = createSelector(\n  selectTodos,\n  state => state.filters.filterComplete,\n  state => state.filters.filterColor,\n  (todos, filterComplete, filterColor) => {\n    return todos.filter((todo) => {\n      const matchColor = todo.color === filterColor || filterColor === \"none\";\n      const matchComplete = todo.completed === filterComplete || filterComplete === \"none\";\n      if (matchColor && matchComplete) return todo\n    })\n  }\n)\nexport const selectTodoById = (state, id) => {\n  return selectTodos(state).find(todo => todo.id === id);\n}\n\n// -------- アクションクリエイター --------\n// コンポーネント側でこれらの関数を実行してactionオブジェクトを取り出す\n// 基本typeプロパティとpayloadプロパティで構成されて\n// reducerに渡されるとtypeプロパティを元に処理分岐する\nexport const todoAdd = (todo) => {\n// export const todoAdd = (text) => {\n  return {\n    type: \"TODOS/TODO_ADDED\",\n    payload: {\n      id: todo.id,\n      text: todo.text,\n      completed: todo.completed,\n      color: todo.color\n    }\n  }\n}\nexport const changeTodo = (todo) =>{\n  return {\n    type: \"TOODS/CHANGE_TODO\",\n    payload:{\n      id: todo.id,\n      text: todo.text,\n      completed: todo.completed,\n      color: todo.color\n    }\n  }\n}\nexport const todoFetch = () =>{\n  return {\n    type: \"TODOS/FETCH_STATE_CHANGE\",\n    payload: {\n      fetching: true,\n      fetched: false\n    }\n  }\n}\nexport const todoFetchFin = () => {\n  return {\n    type: \"TODOS/FETCH_STATE_CHANGE\",\n    payload: {\n      fetching: false,\n      fetched: true\n    }\n  }\n}\nexport const deletedTodo = (id) => {\n  return {\n    type: \"TODOS/DELETED_TODO\",\n    payload: {\n      id\n    }\n  }\n}\nexport const changeComplete = (id, complete) => {\n  return {\n    type: \"TODOS/CHANGE_COMPLETE\",\n    payload: {\n      id: id,\n      completed: complete,\n    }\n  }\n}\n\nexport const changeColor = (id, color) => {\n  return {\n    type: \"TODOS/CHANGE_COLOR\",\n    payload: {\n      id: id,\n      color: color\n    }\n  }\n}\n\n// -------- サンク関数 --------\n// アクションクリエイターみたいにコンポーネント側で実行する\n// 実行するとasyncなfunctionを返す。これがそのままdispatch()に渡される\n\n// 新規に登録するtodo\n// コンポーネント側よりtextをもらって、APIにpostする\n// responseは従来のtodoAddアクションクリエイターによって処理してもらう\nexport const saveNewTodo = (text) => async (dispatch) => {\n  const initTodo = { text, completed: false, color: \"none\" };  //{text:'textの値'}\n  const response = await client.post('http://localhost:3030/todos', initTodo);\n  dispatch(todoAdd(response));\n}\n\n// 公式のやつはこんな感じなのか？確認\nexport const fetchTodos = () => async (dispatch) => {\n  dispatch(todoFetch());\n  const response = await client.get('http://localhost:3030/todos');\n  dispatch(todoFetchFin());\n  for(const r of response){\n    dispatch(todoAdd(r));\n  }\n}\n\nexport const updateTodo = (id, todo) => async (dispatch) => {\n  const sendTodo = todo;\n  const response = await client.put('http://localhost:3030/todos/' + id, sendTodo);\n  dispatch(changeTodo(response));\n}\n\nexport const deleteTodo = (id) => async (dispatch) => {\n  const response = await client.delete('http://localhost:3030/todos/' + id);\n  dispatch(deletedTodo(id));\n}\n\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\state\\filtersSlice.js",[],"D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\components\\TodoListItem.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"\r\nimport { AppBar, Button, Checkbox, Container, IconButton, InputLabel, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, MenuItem, Select, TextField, Toolbar, Typography } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { push } from \"connected-react-router\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeComplete, changeColor, updateTodo, updateComplete, updateColor, selectTodoById, changeTodos, deleteTodo } from \"../state/todosSlice\";\r\n\r\n\r\nconst TodoListItem = (props) => {\r\n  const todo = useSelector(state => selectTodoById(state, props.id));\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeCompleted = (e) => {\r\n    const newTodo = {...todo,completed: e.target.checked};\r\n    dispatch(updateTodo(props.id, newTodo));\r\n  }\r\n  const handleChangeColor = (e) => {\r\n    const newTodo = {...todo,color: e.target.value};\r\n    dispatch(updateTodo(props.id, newTodo));\r\n  }\r\n  const handleDelete = () => {\r\n    dispatch(deleteTodo(props.id));\r\n  }\r\n\r\n  return (\r\n    <ListItem>\r\n      <ListItemIcon>\r\n        <Checkbox\r\n          edge=\"start\"\r\n          checked={todo.completed}\r\n          disableRipple\r\n          onChange={handleChangeCompleted}          \r\n        />\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={todo.text}\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <Select\r\n          edge=\"end\"\r\n          value={todo.color}\r\n          onChange={handleChangeColor}\r\n        >\r\n          <MenuItem value={\"green\"}>green</MenuItem>\r\n          <MenuItem value={\"red\"}>red</MenuItem>\r\n          <MenuItem value={\"blue\"}>blue</MenuItem>\r\n\r\n        </Select>\r\n        <IconButton\r\n          aria-label=\"delete\"\r\n          onClick={handleDelete}\r\n          >\r\n          <DeleteIcon/>\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default TodoListItem;\r\n","D:\\katu\\WEB\\WEB関係のサンプル集\\react-redux-demo\\src\\api\\client.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":21},{"ruleId":"132","severity":1,"message":"137","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":14},{"ruleId":"132","severity":1,"message":"138","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"139","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":14},{"ruleId":"132","severity":1,"message":"137","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"140","line":23,"column":9,"nodeType":"134","messageId":"135","endLine":23,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":31,"column":15,"nodeType":"143","messageId":"144","endLine":31,"endColumn":17},{"ruleId":"132","severity":1,"message":"145","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"146","line":2,"column":26,"nodeType":"134","messageId":"135","endLine":2,"endColumn":34},{"ruleId":"132","severity":1,"message":"147","line":2,"column":47,"nodeType":"134","messageId":"135","endLine":2,"endColumn":57},{"ruleId":"132","severity":1,"message":"148","line":2,"column":77,"nodeType":"134","messageId":"135","endLine":2,"endColumn":85},{"ruleId":"132","severity":1,"message":"149","line":2,"column":87,"nodeType":"134","messageId":"135","endLine":2,"endColumn":99},{"ruleId":"132","severity":1,"message":"150","line":2,"column":101,"nodeType":"134","messageId":"135","endLine":2,"endColumn":124},{"ruleId":"132","severity":1,"message":"151","line":2,"column":126,"nodeType":"134","messageId":"135","endLine":2,"endColumn":138},{"ruleId":"132","severity":1,"message":"152","line":2,"column":169,"nodeType":"134","messageId":"135","endLine":2,"endColumn":176},{"ruleId":"132","severity":1,"message":"153","line":2,"column":178,"nodeType":"134","messageId":"135","endLine":2,"endColumn":188},{"ruleId":"132","severity":1,"message":"154","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":16},{"ruleId":"132","severity":1,"message":"137","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"155","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":18},{"ruleId":"132","severity":1,"message":"156","line":11,"column":10,"nodeType":"134","messageId":"135","endLine":11,"endColumn":31},{"ruleId":"132","severity":1,"message":"157","line":11,"column":33,"nodeType":"134","messageId":"135","endLine":11,"endColumn":46},{"ruleId":"132","severity":1,"message":"158","line":14,"column":10,"nodeType":"134","messageId":"135","endLine":14,"endColumn":17},{"ruleId":"132","severity":1,"message":"159","line":14,"column":19,"nodeType":"134","messageId":"135","endLine":14,"endColumn":33},{"ruleId":"132","severity":1,"message":"160","line":42,"column":9,"nodeType":"134","messageId":"135","endLine":42,"endColumn":14},{"ruleId":"132","severity":1,"message":"161","line":43,"column":9,"nodeType":"134","messageId":"135","endLine":43,"endColumn":16},{"ruleId":"132","severity":1,"message":"145","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"162","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"147","line":2,"column":43,"nodeType":"134","messageId":"135","endLine":2,"endColumn":53},{"ruleId":"132","severity":1,"message":"152","line":2,"column":99,"nodeType":"134","messageId":"135","endLine":2,"endColumn":106},{"ruleId":"132","severity":1,"message":"153","line":2,"column":108,"nodeType":"134","messageId":"135","endLine":2,"endColumn":118},{"ruleId":"132","severity":1,"message":"163","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":18},{"ruleId":"132","severity":1,"message":"145","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"162","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"147","line":2,"column":26,"nodeType":"134","messageId":"135","endLine":2,"endColumn":36},{"ruleId":"132","severity":1,"message":"152","line":2,"column":38,"nodeType":"134","messageId":"135","endLine":2,"endColumn":45},{"ruleId":"132","severity":1,"message":"153","line":2,"column":47,"nodeType":"134","messageId":"135","endLine":2,"endColumn":57},{"ruleId":"132","severity":1,"message":"154","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":16},{"ruleId":"132","severity":1,"message":"137","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"155","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":18},{"ruleId":"132","severity":1,"message":"140","line":22,"column":9,"nodeType":"134","messageId":"135","endLine":22,"endColumn":17},{"ruleId":"132","severity":1,"message":"164","line":23,"column":9,"nodeType":"134","messageId":"135","endLine":23,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":27,"column":7,"nodeType":"167","endLine":27,"endColumn":45},{"ruleId":"132","severity":1,"message":"168","line":36,"column":10,"nodeType":"134","messageId":"135","endLine":36,"endColumn":20},{"ruleId":"169","severity":1,"message":"170","line":85,"column":48,"nodeType":"171","messageId":"172","endLine":85,"endColumn":50},{"ruleId":"169","severity":1,"message":"170","line":149,"column":32,"nodeType":"171","messageId":"172","endLine":149,"endColumn":34},{"ruleId":"132","severity":1,"message":"173","line":263,"column":9,"nodeType":"134","messageId":"135","endLine":263,"endColumn":17},{"ruleId":"132","severity":1,"message":"145","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"162","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"174","line":2,"column":36,"nodeType":"134","messageId":"135","endLine":2,"endColumn":45},{"ruleId":"132","severity":1,"message":"175","line":2,"column":59,"nodeType":"134","messageId":"135","endLine":2,"endColumn":69},{"ruleId":"132","severity":1,"message":"176","line":2,"column":71,"nodeType":"134","messageId":"135","endLine":2,"endColumn":75},{"ruleId":"132","severity":1,"message":"177","line":2,"column":158,"nodeType":"134","messageId":"135","endLine":2,"endColumn":167},{"ruleId":"132","severity":1,"message":"152","line":2,"column":169,"nodeType":"134","messageId":"135","endLine":2,"endColumn":176},{"ruleId":"132","severity":1,"message":"153","line":2,"column":178,"nodeType":"134","messageId":"135","endLine":2,"endColumn":188},{"ruleId":"132","severity":1,"message":"178","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":16},{"ruleId":"132","severity":1,"message":"179","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":20},{"ruleId":"132","severity":1,"message":"180","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":16},{"ruleId":"132","severity":1,"message":"181","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":20},{"ruleId":"132","severity":1,"message":"137","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":14},{"ruleId":"132","severity":1,"message":"163","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":18},{"ruleId":"132","severity":1,"message":"159","line":11,"column":10,"nodeType":"134","messageId":"135","endLine":11,"endColumn":24},{"ruleId":"132","severity":1,"message":"182","line":11,"column":26,"nodeType":"134","messageId":"135","endLine":11,"endColumn":37},{"ruleId":"132","severity":1,"message":"183","line":11,"column":51,"nodeType":"134","messageId":"135","endLine":11,"endColumn":65},{"ruleId":"132","severity":1,"message":"184","line":11,"column":67,"nodeType":"134","messageId":"135","endLine":11,"endColumn":78},{"ruleId":"132","severity":1,"message":"185","line":11,"column":96,"nodeType":"134","messageId":"135","endLine":11,"endColumn":107},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'push' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AppBar' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'DrawerMenu' is defined but never used.","'FullscreenExitTwoTone' is defined but never used.","'TodayOutlined' is defined but never used.","'todoAdd' is defined but never used.","'changeComplete' is defined but never used.","'todos' is assigned a value but never used.","'todoIds' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'classes' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'nextTodoId' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'response' is assigned a value but never used.","'Container' is defined but never used.","'InputLabel' is defined but never used.","'List' is defined but never used.","'TextField' is defined but never used.","'HomeIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'InfoIcon' is defined but never used.","'makeStyles' is defined but never used.","'changeColor' is defined but never used.","'updateComplete' is defined but never used.","'updateColor' is defined but never used.","'changeTodos' is defined but never used.","no-global-assign","no-unsafe-negation"]